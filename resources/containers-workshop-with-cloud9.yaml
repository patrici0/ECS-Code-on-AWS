Description:
    This template deploys a VPC, with a pair of public and private subnets spread across two Availability Zones. It deploys an Internet Gateway, with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), and default routes for them in the private subnets. It also deploys a Cloud9 instance in the Public Subnet (AZ1).


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Resource Naming"
        Parameters:
          - EnvironmentName
      -
        Label:
            default: "Network Configurations"
        Parameters:
            - VpcCIDR
            - PublicSubnet1CIDR
            - PublicSubnet2CIDR
            - PrivateSubnet1CIDR
            - PrivateSubnet2CIDR

    ParameterLabels:
      EnvironmentName:
        default: Add your name here
      VpcCIDR:
        default: IP range for the new VPC
      PublicSubnet1CIDR:
        default: IP range for the first public subnet
      PublicSubnet2CIDR:
        default: IP range for the second public subnet
      PrivateSubnet1CIDR:
        default: IP range for the first private subnet
      PrivateSubnet2CIDR:
        default: IP range for the second private subnet


Parameters:

    EnvironmentName:
        Description: This name will be prefixed to resource names and will make easier for you to know what are your resources.
        Type: String
        AllowedPattern : ".+"

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC.
        Type: String
        Default: 10.192.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone.
        Type: String
        Default: 10.192.10.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone.
        Type: String
        Default: 10.192.11.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone.
        Type: String
        Default: 10.192.20.0/24

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone.
        Type: String
        Default: 10.192.21.0/24

Resources:

    VPC:
        Type: AWS::EC2::VPC
        Properties:
            EnableDnsHostnames: 'true'
            CidrBlock: !Ref VpcCIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-vpc

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-vpc-ig

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-public-subnet-az1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-public-subnet-az2

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-private-subnet-az1

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-private-subnet-az2

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-public-routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2


    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-private-routes-az1
    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1
    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1
    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-containers-workshop-private-routes-az2
    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2
    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2
    NoIngressSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: "no-ingress-sg"
            GroupDescription: "Security group with no ingress rule"
            VpcId: !Ref VPC
    Cloud9Instance:
        Type: AWS::Cloud9::EnvironmentEC2
        Properties:
            Description: Cloud9 environment created for the Containers on AWS workshop.
            AutomaticStopTimeMinutes: 15
            InstanceType: t2.small
            Name: !Sub ${EnvironmentName}-containers-workshop-cloud9-instance
            SubnetId: !Ref PublicSubnet1
        DependsOn: PublicSubnet1

Outputs:
    Cloud9URL:
        Description: URL used to access the Cloud9 environment
        Value: !Join [ "", ["https://", !Ref "AWS::Region", ".console.aws.amazon.com/cloud9/ide/", !Ref "Cloud9Instance", "?region=", !Ref "AWS::Region"] ]
    Subnet:
        Description: A public subnet where the load generator instance will be placed.
        Value: !Ref PublicSubnet1
        Export:
          Name: containers-workshop-public-subnet
    VPC:
        Description: The VPC created to the workshop.
        Value: !Ref VPC
        Export:
          Name: containers-workshop-vpc
